# Задание №1
# Ранее вы выполняли задание связанное с ветеринарной клиникой. В той
# задаче вам предстояло вывести информацию о питомце на экран. Сейчас вам
# необходимо создать словарь pets = {}
# Примерный вид будет следующим:
# pets = {
# "Имя питомца": {
# 'Вид питомца': # придумайте каким образом сюда внести информацию,
# 'Возраст питомца': # придумайте каким образом сюда внести информацию,
# 'Имя владельца': # придумайте каким образом сюда внести информацию
# }
# }
# У вас должен получиться словарь, с ещё одним словарём внутри. То есть, есть
# словарь pets. Он в себе хранит ещё один словарь, который обозначается
# именем питомца. Имя питомца также нужно каким-то образом вносить туда.
# Задача не будет считаться выполненной, если вы заходите сразу внести
# информацию, не прибегая в функции input()
# Например:
# pets = {
# "Мухтар": {
# "Вид питомца": "Собака",
# "Возраст питомца": 9,
# "Имя владельца": "Павел"
# }
# }
# Так должен будет выглядеть результируюший словарь, но первоначальный
# его вид - пустой. Его необходимо заполнить пользовательским вводом через
# консоль с помощью функции input(), а не вписать значения уже в самом коде.
# Возраст питомца должен быть типа int Всё остальное - строки
# Так как возраст питомца указывается типом int. Необходимо, в соответствии с
# указанным возрастом выводит год, года или лет. Например:
# Его возраст: 24 года
# Его возраст: 21 год
# Его возраст: 19 лет
# И теперь осталось только получить всю информацию о питомце в виде
# строки, как из задания по Урок №3. Ввод-вывод и базовые переменные. Задание
# №1, но с небольшими изменениями. Для получения информации необходимо
# воспользоваться методами словаря keys() и values():
# Это желторотый питон по кличке "Каа". Возраст питомца: 19 лет. Имя владельца:
# Саша
def task_1():
    pets = dict()
    while True:
        print("Добро пожаловать в супер-пупер костыль ЗАМУТИ СЛОВАРЬ!")
        print("Список команд")
        print('name - создание нового питомца путем ввода клички')
        print('type - ввод вид животного, сначала надо указать кличку')
        print('age - ввод возраста животного сначала надо указать кличку')
        print('owner-name - ввод имени владельца сначала надо указать кличку')
        print('exit - ну не тупой думаю поймешь')
        print('print_raw - вывести словарь в сыров виде')
        print('print_answer - вывести описание всех добавленых питомцев как по заданию')
        request = input()
        match request:
            case 'name':
                k = input()
                pets[k] = {}
            case 'type':
                k = input()
                typ = input()
                if k in pets.keys():
                    pets[k]['type'] = typ
            case 'age':
                k = input()
                age = int(input())
                if age % 10 == 1 and age != 11 and age % 100 != 11:
                    year_case = 'год'
                elif 1 < age % 10 <= 4 and age != 12 and age != 13 and age != 14:
                    year_case = 'года'
                else:
                    year_case = 'лет'
                if k in pets.keys():
                    pets[k]['age'] = f'{age} {year_case}'
            case 'owner_name':
                k = input()
                owner_name = input()
                if k in pets.keys():
                    pets[k]['owner_name'] = owner_name
            case 'exit':
                break
            case 'print_raw':
                for k, v in pets.items():
                    print(k, v)
            case 'print_answer':
                for k, v in pets.items():
                    print(
                        f'Это {v["type"]} по кличке "{k}". Возраст питомца: {v["age"]}. Имя владельца: {v["owner_name"]}')


# С помощью цикла создайте словарь, в котором ключи будут, например от
# числа 10, до -5 (включительно). А значениями этих ключей будут сами эти
# числа возведённые в степени равных этим числам
# Например:
# my_dict = {
# 10: 10000000000,
# 9: 387420489,
# # и так далее ...
# -5: -0.00032
# }
def task_2():
    data = dict()
    for i in range(10, -6, -1):
        data[i] = i ** i
    print(data)


# task_1()
task_2()
